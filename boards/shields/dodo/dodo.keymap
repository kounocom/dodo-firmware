#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        emoji: emoji {
            compatible = "zmk,behavior-tap-dance";
            label = "EMOJI";
            #binding-cells = <0>;
            bindings = <&surprised_emoji>, <&heart_emoji>;
        };

        layerctl: layerctl {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERCTL";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 3>;
        };
    };

    macros {
        to_headphones: to_headphones {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(F2)) &kp LA(F2) &to 1>;
            label = "TO_HEADPHONES";
        };

        to_speakers: to_speakers {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(F1)) &kp LA(F1) &to 0>;
            label = "TO_SPEAKERS";
        };

        surprised_emoji: surprised_emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp N &kp Y &kp A &kp UNDER &kp A &kp COLON>;
            label = "SURPRISED_EMOJI";
        };

        heart_emoji: heart_emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp LS(H) &kp E &kp A &kp R &kp T &kp COLON>;
            label = "HEART_EMOJI";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MainEncoderStatus0 {
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3   &kp N4     &kp N5                                       &kp N6     &kp N7            &kp N8             &kp N9         &kp N0    &kp MINUS
&kp GRAVE  &kp Q   &kp W     &kp E    &kp R      &kp T                                        &kp Y      &kp U             &kp I              &kp O          &kp P     &kp EQUAL
&emoji     &kp A   &kp S     &kp D    &kp F      &kp G                                        &kp H      &kp J             &kp K              &kp L          &kp SEMI  &kp SQT
&kp LGUI   &kp Z   &kp X     &kp C    &kp V      &kp B      &kp ENTER       &kp BACKSPACE     &kp N      &kp M             &kp COMMA          &kp DOT        &kp FSLH  &kp PRINTSCREEN
                   &kp LALT  &kp TAB  &kp LCTRL  &kp SPACE  &kp LSHFT       &layerctl         &kp SPACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
                                                            &to_headphones  &kp C_PLAY_PAUSE
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        MainEncoderStatus1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans
                                                &to_speakers  &trans
            >;
        };

        Functions {
            bindings = <
&kp F1  &kp F2    &kp F3          &kp F4     &kp F5  &kp F6                  &kp F7  &kp F8  &kp F9  &kp F10          &kp F11  &kp F12
&trans  &trans    &kp UP_ARROW    &trans     &trans  &trans                  &trans  &trans  &trans  &trans           &trans   &trans
&trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans                  &trans  &trans  &trans  &trans           &trans   &trans
&trans  &trans    &trans          &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans   &trans
                  &trans          &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp PAUSE_BREAK
                                                             &trans  &trans
            >;
        };

        KeyboardCtl {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(320,93,49)  &trans           &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_EFR  &rgb_ug RGB_EFF                 &rgb_ug RGB_SAD                   &rgb_ug RGB_SAI  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_SPD  &rgb_ug RGB_SPI                 &rgb_ug RGB_HUD                   &rgb_ug RGB_HUI  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_BRD  &rgb_ug RGB_BRI                 &trans                            &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                 &bt BT_CLR_ALL                    &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                                                                                    &trans  &trans
            >;
        };
    };
};
